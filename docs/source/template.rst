Document a python project
---------------------------------------------

setup python virtual environment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

create a folder containing python interpreter for the virtual environment

.. code-block:: console

   cd excitability
   virtualenv -p python env

activate virtual enviroment. once activated, the prompt will start with (env).

.. code-block:: console

   source env/bin/activate

verify whether the virtual environment is activated.

.. code-block:: console

   which python


manage python packages
^^^^^^^^^^^^^^^^^^^^^^^^

install packages in the virtual environment, or python will search for the same package in other python interpreters in the computer.

.. code-block:: console

   pip install sphinx
   pip freeze


add virtual environment to jupyter notebook
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

install jupyter using brew. uninstall existing jupyter installed with pip.

.. code-block:: console

   brew install jupyter

install the kernel for this virtual environment

.. code-block:: console

   python -m ipykernel install --user --name env

list installed kernels

.. code-block:: console

   jupyter kernelspec list
   jupyter kernelspec remove kernelname

remove unwanted kernel

.. code-block:: console

   jupyter kernelspec remove kernelname

write python modules and docstrings
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A simple and popular docstring format is `numpydoc <https://numpydoc.readthedocs.io/en/latest/format.html>`_, which describes the syntax and best practices for docstrings used with the numpydoc extension for Sphinx. `Here <https://numpydoc.readthedocs.io/en/latest/example.html#example>`_ is an example for documenting a function.

write `rst files <https://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html>`_

generate auto documentation with `sphinx <https://www.sphinx-doc.org/en/master/>`_
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Sphinx is a popular tool for creating documentation. There are many good `tutorials <http://education.molssi.org/python-package-best-practices/09-documentation/index.html>`_ available. I used `sphinx-apidoc <https://www.sphinx-doc.org/en/master/man/sphinx-apidoc.html>`_ to generate rst files, which are located at *project/docs/source/generated/*. 

*index.rst* serve as a home page for the documentation, including references to all other pages. 
The rst files generated by previous run of **sphinx-apidoc** need to be deleted and re-run if the file structure is changed. 

.. code-block:: console

    cd project/docs
    rm source/generated/* 
    sphinx-apidoc -o source/generated ../src -f --implicit-namespaces -e -H Modules -d 3

After rst files are created, run **sphinx-build** to create html files from rst files. Most projects packages 
**sphinx-build** in *project/docs/make.bat*

.. code-block:: console

    make clean; make html

If the build is successful, you can view the webpages by opening *project/docs/build/index.html*. There are many `HTML themes <https://www.sphinx-doc.org/en/master/usage/theming.html>`_ available and they can be `customized <https://pydata-sphinx-theme.readthedocs.io/en/latest/user_guide/customizing.html#>`_. I used a custom version of `pydata_sphinx_theme <https://pypi.org/project/pydata-sphinx-theme/>`_.

host documentation with `github pages <https://pages.github.com>`_
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*README.md* is a text file that introduces and explains the project, where *md* is short for the `Markdown format <https://www.markdownguide.org/basic-syntax/#overview>`_. GitHub looks for *README.md* in *project/* or *project/docs/* and display it along with the list of files and directories in the project. I prefer to keep *README.md* in the same directory as other rst files at *project/docs/source/README.md* So I created a symbolic link *project/docs/README.md* that contains a reference to *project/docs/source/README.md* 

To include *README.md* in *index.rst*, I installed and included `myst parser extension <https://myst-parser.readthedocs.io/en/latest/sphinx/intro.html>`_ in *project/docs/source/conf.py*


generate filetree automatically
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

  cd excitability/docs
  python -u source/FileTreeMaker.py -r ../../excitability -xf env -xn .pyc .ipynb_checkpoints .ipynb .DS_Store __pycache__  _static build generated .git

